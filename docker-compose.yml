services:
  # Database service (SQLite compatible with Cloudflare D1)
  database:
    image: alpine:latest
    container_name: shumilog-database
    volumes:
      - db_data:/data
      - ./backend/src/db:/docker-entrypoint-initdb.d:ro
    environment:
      - DB_PATH=/data/shumilog.db
    command: >
      sh -c "
        apk add --no-cache sqlite &&
        if [ ! -f /data/shumilog.db ]; then
          echo 'Initializing database...' &&
          sqlite3 /data/shumilog.db < /docker-entrypoint-initdb.d/schema.sql.ts 2>/dev/null || echo 'Schema initialization completed' &&
          sqlite3 /data/shumilog.db < /docker-entrypoint-initdb.d/seeds.sql.ts 2>/dev/null || echo 'Seed data initialization completed'
        fi &&
        echo 'Database ready, keeping container alive...' &&
        tail -f /dev/null
      "
    healthcheck:
      test: ["CMD", "sh", "-c", "sqlite3 /data/shumilog.db 'SELECT 1' && echo 'Database healthy'"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      default:
        aliases:
          - db
          - shumilog-db

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shumilog-backend
    ports:
      - "${API_PORT:-8787}:8787"
    volumes:
      - ./backend:/app
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
      - ./backend/vitest.config.ts:/app/vitest.config.ts:ro
      - backend_node_modules:/app/node_modules
      - db_data:/data
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - API_PORT=8787
      - DATABASE_URL=file:/data/shumilog.db
      - DB_PATH=/data/shumilog.db
      - CORS_ORIGIN=http://localhost:5173,http://frontend:5173
      - ENABLE_HOT_RELOAD=true
      - ENABLE_DEBUG_LOGS=true
      - ENABLE_DEV_ENDPOINTS=true
      - DATABASE_HOST=database
      - BACKEND_HOST=backend
      - FRONTEND_HOST=frontend
    depends_on:
      database:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8787/health | grep -q 'healthy' && echo 'Backend healthy'"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      default:
        aliases:
          - api
          - shumilog-api

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shumilog-frontend
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./frontend:/app
      - ./frontend/src:/app/src:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/vite.config.ts:/app/vite.config.ts:ro
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8787
      - VITE_API_URL_INTERNAL=http://backend:8787
      - DATABASE_HOST=database
      - BACKEND_HOST=backend
      - FRONTEND_HOST=frontend
    depends_on:
      backend:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:5173 && echo 'Frontend healthy'"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    stdin_open: true
    tty: true
    networks:
      default:
        aliases:
          - web
          - shumilog-web

# Named volumes for data persistence
volumes:
  db_data:
    name: shumilog_db_data
  backend_node_modules:
    name: shumilog_backend_node_modules
  frontend_node_modules:
    name: shumilog_frontend_node_modules

# Network configuration for service discovery and communication
networks:
  default:
    name: shumilog_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
  shumilog_internal:
    name: shumilog_internal
    driver: bridge
    internal: true