variable "cloudflare_account_id" {
  description = "Cloudflare account identifier used for Workers, D1, and Pages resources."
  type        = string
}

variable "backend_worker_name" {
  description = "Name of the Worker service hosting the backend API."
  type        = string
  default     = "shumilog-backend"
}

variable "backend_worker_bundle_path" {
  description = "Relative path (from this module) to the bundled Worker script produced by Wrangler."
  type        = string
  default     = "artifacts/backend-worker.mjs"
}

variable "worker_compatibility_date" {
  description = "Compatibility date applied to the Worker deployment."
  type        = string
  default     = "2024-09-26"
}

variable "worker_compatibility_flags" {
  description = "Compatibility flags applied to the Worker (matches wrangler.toml)."
  type        = list(string)
  default     = ["nodejs_compat"]
}

variable "d1_database_name" {
  description = "Primary D1 database name used by the backend Worker."
  type        = string
  default     = "shumilog-db"
}

variable "frontend_project_name" {
  description = "Cloudflare Pages project name used for the frontend."
  type        = string
  default     = "shumilog-frontend"
}

variable "frontend_production_branch" {
  description = "Git branch used for production deployments in Cloudflare Pages."
  type        = string
  default     = "master"
}

variable "frontend_build_command" {
  description = "Build command executed by Cloudflare Pages."
  type        = string
  default     = "npm install --prefix frontend && npm run build --prefix frontend"
}

variable "frontend_destination_dir" {
  description = "Output directory generated by the frontend build (relative to root_dir)."
  type        = string
  default     = "dist"
}

variable "frontend_root_dir" {
  description = "Root directory of the frontend project in this repository."
  type        = string
  default     = "frontend"
}

variable "frontend_api_base_url" {
  description = "Optional override for the production API base URL injected into the frontend build. Defaults to the workers.dev API endpoint."
  type        = string
  default     = null
  nullable    = true
}

variable "frontend_preview_api_base_url" {
  description = "Optional preview API base URL for non-production deployments. Defaults to the production value when unset."
  type        = string
  default     = null
  nullable    = true
}

variable "workers_dev_subdomain" {
  description = "workers.dev subdomain configured on the Cloudflare account (e.g. shumilog)."
  type        = string
}

variable "worker_public_base_url_override" {
  description = "Optional override for the public URL of the backend Worker. Defaults to workers.dev naming."
  type        = string
  default     = null
  nullable    = true
}

variable "frontend_base_url_override" {
  description = "Optional override for the public URL of the frontend site. Defaults to <project>.pages.dev."
  type        = string
  default     = null
  nullable    = true
}

variable "frontend_additional_env_vars" {
  description = "Extra environment variables for the production Cloudflare Pages environment."
  type        = map(string)
  default     = {}
}

variable "frontend_preview_additional_env_vars" {
  description = "Extra environment variables for preview Cloudflare Pages deployments."
  type        = map(string)
  default     = {}
}

variable "worker_additional_plain_text_bindings" {
  description = "Additional plain text bindings exposed to the Worker (key/value)."
  type        = map(string)
  default     = {}
}

variable "twitter_client_id" {
  description = "Twitter OAuth client identifier stored as a Worker secret."
  type        = string
  default     = null
  nullable    = true
  sensitive   = true
}

variable "twitter_client_secret" {
  description = "Twitter OAuth client secret stored as a Worker secret."
  type        = string
  default     = null
  nullable    = true
  sensitive   = true
}

variable "session_secret" {
  description = "Session secret used to sign authentication cookies."
  type        = string
  default     = null
  nullable    = true
  sensitive   = true
}
